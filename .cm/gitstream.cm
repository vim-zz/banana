# -*- mode: yaml -*-

manifest:
  version: 1.0

# The `automations` section includes a list of automation that applies 
# to the repository in which gitStream is installed. Each automation has an 
# `if` key with a list of the necessary assertions, as well as a `run` key with a
# list of all actions. All the listed assertions need to pass in order 
# for the following actions to be executed (there is AND relation between conditions).

# Each automation under the `automations` section is independent of the others. 
# Every time a PR is opened or changed, the automation's conditions are evaluated (the `if`). 
# The actions under `run` are executed one by one if all the conditions pass. 

# Conditions consists of an expression, which are wrapped with double curly braces, and 
# includes a context variable like `files` and filter functions like `length`. Filters 
# functions are essentially functions that can be applied to context variables. They are 
# called with a pipe operator (|) and can take arguments. Read more on https://docs.gitstream.cm

automations:
  # This is the name of the review automation. You can use whatever name, a meaningful name 
  # will help to identify it in the future. Each automation name in this file should be unique.
  spam_formatting_changes:
    # The `if` key has a list of conditions, each condition is specified as a Jinja expression
    # in a double curly braces. Expressions are evaluated by gitStream on a PR when triggered.
    if:
      # Given the PR code changes, check that only formatting changes were made 
      - {{ source.diff.files | isFormattingChange }}
    # `run` key has a list of actions, which are executed one by one whenever the automation 
    # conditions are met. 
    run: 
      # When the changes are validated as formatting only, you can help to speed up the review 
      # by adding a label that marks it accordingly.
      - action: add-label@v1
        args:
          label: 'SPAM?'
          color: '#FD9701'

  spam_docs_changes:
    if:
      # Given the PR files changes, check that only documents were changed.
      - {{ files | allDocs }}
    run: 
      - action: add-label@v1
        args:
          label: 'doc'
          color: '#1212fe'
      - action: add-reviewers@v1
        args:
          reviewers: ['vim-zz']

  spam_images_changes:
    if:
      # Check for every changed file if is a document file. The allImages filter checks for
      # common file extensions used for graphics.
      - {{ files | allImages }}
    run:
      - action: add-label@v1
        args:
          label: 'SPAM?'
          color: '#FD9701'

  notify:
    if:
       - {{ files | match(list=['OAuthHandler.js', 'TokenHandler.js', 'token.service.js']) | some }}    
     run: 
       - action: add-reviewers@v1
         args:
           reviewers: [yeelali14]
       - action: add-labels@v1
         args:
           labels: ['authentication']