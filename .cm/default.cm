# -*- mode: yaml -*-
# This example configuration for provides basic automations to get started with gitStream.
# View the gitStream quickstart for more examples: https://docs.gitstream.cm/quick-start/
manifest:
  version: 1.0
automations:
  # Add a label that indicates how many minutes it will take to review the PR.
  estimated_time_to_review: 
    if:
      - true
    run:
      - action: add-label@v1
      # etr is defined in the last section of this example
        args:
          label: "{{ calc.etr }} min review"
          color: {{ 'E94637' if (calc.etr >= 20) else ('FBBD10' if (calc.etr >= 5) else '36A853') }}

  debug:
    if:
      - true
    run:
      - action: add-comment@v1
        args:
          comment: |
            pr.status == OPEN {{ pr.status }} ? {{ pr.status == OPEN }}
            pr.requested_changes | length {{ pr.requested_changes }} ? {{ pr.requested_changes | length }}
  
  requested_changes:
    if:
      - {{ pr.status == OPEN }}
      - {{ pr.requested_changes | length > 0 }}
    run:
      - action: add-label@v1
        args:
          label: 'ðŸš¨ Changes requested'
          color: '#EC560D'

  safe_changes:
    if:
      - {{ is.formatting or is.docs or is.tests }}
    run: 
      - action: add-label@v1
        args:
          label: 'safe-changes'
      - action: approve@v1

# To simplify the automation, this calculation is placed under a unique YAML key.
# The result is is assigned to `is.formatting`, `is.docs` and `is.tests` which is 
# used in the automation above. You can add as many keys as you like.
is:
  formatting: {{ source.diff.files | isFormattingChange }}
  docs: {{ files | allDocs }}
  tests: {{ files | allTests }}
            
# The next function calculates the estimated time to review and makes it available in the automation above.
calc:
  etr: {{ branch | estimatedReviewTime }}
